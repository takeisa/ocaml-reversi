# プログラム名 (拡張子無し)
PROGRAM = reversi

# ソースファイルを拡張子抜きで1行に一つずつ書く。
# 後ろにスペースを付けないこと。
FILES[] =
  reversi
  disk
  pos
  board
  cell
  computer
# 別の書き方もある:
# FILES = parser lexer \
#         main

# ocamlfind を使う場合
USE_OCAMLFIND = true
# ocamlfind で探して使うパッケージ
OCAMLPACKS[] =
   core
   curses
# camlp4 プリプロセッサを使うことを omake に伝える
#OCAMLFINDFLAGS = -syntax camlp4o

# threadsを使うには -thread または -vmthread が必要
OCAMLFLAGS = -thread

# ocamldep を走らせる前にファイル生成しておく必要があることを OMake に伝える
# (OMake は ocamllex と ocamlyacc を使うことは知っている)
#OCamlGeneratedFiles(lexer.ml parser.mli parser.ml)

# ライブラリの生成
# LIB = .
# OCamlLibrary($(LIB), $(FILES))

# 実行ファイルの生成
OCamlProgram($(PROGRAM), $(FILES))

# デフォルト動作: バイトコードかネイティブコードのどちらか又は両方の生成
BYTE_ENABLED = false
NATIVE_ENABLED = true
.DEFAULT: $(if $(BYTE_ENABLED), $(PROGRAM).run) \
          $(if $(NATIVE_ENABLED), $(PROGRAM).opt)

# 掃除
.PHONY: clean
clean:
  rm -f \
     $(filter-proper-targets $(glob $(addsuffix .*, $(FILES)))) \
     $(PROGRAM).run $(PROGRAM).opt
